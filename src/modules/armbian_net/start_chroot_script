#!/usr/bin/env bash
#### MainsailOS network configurator for armbian images
####
#### Written by Stephan Wendel aka KwadFan <me@stephanwe.de>
#### Copyright 2023 - till today
#### https://github.com/mainsail-crew/MainsailOS
####
#### This File is distributed under GPLv3
####

# shellcheck enable=require-variable-braces

# Description:
# This file installs a service based on armbians armbian_firstrun_config
# The original work is done by the armbian developer's team
# sources of files can be found here: https://github.com/armbian/build

# Source error handling, leave this in place
set -Ee

# Source CustomPIOS common.sh
# shellcheck disable=SC1091
source /common.sh
install_cleanup_trap


## Step 1: Install files
unpack filesystem/root / root
## END

## Step 1.1: Install Depedencies
### Needed to patch 'network_configurator'
# shellcheck disable=SC2086
check_install_pkgs ${ARMBIAN_NET_DEPS}

## Step 2: remove original template
if [[ -f "${ARMBIAN_NET_FIRSTRUN_FILE}" ]]; then
    sudo rm -rf "${ARMBIAN_NET_FIRSTRUN_FILE}"
fi
## END

## Step 3: Disable first run service
# 2025-05-05 Platima:
# This is a patched version of the funciton in CustomPiOS as some base
# images may not have a service that is called, and in that situation
# the entire build will fail. For that reason, this first checks that
# each service exists before taking action.
function systemctl_if_exists_2() {
    if ! hash systemctl 2>/dev/null; then
        echo_red "no systemctl, not running"
        return 0
    fi

    # Extract all service names from arguments
    local services=()
    local other_args=()
    for arg in "$@"; do
        if [[ "${arg}" == *.service ]]; then
            services+=("${arg}")
        else
            other_args+=("${arg}")
        fi
    done

    # If no services found, just run the command as is
    if [ ${#services[@]} -eq 0 ]; then
        systemctl "${@}"
        return $?
    fi

    # Check each service and only execute for those that exist
    local exit_code=0
    local found_valid_service=0

    for service in "${services[@]}"; do
        if systemctl list-unit-files "${service}" &>/dev/null; then
            # Service exists, run the command for this service
            systemctl "${other_args[@]}" "${service}"
            local cmd_exit=$?
            # Keep track of the highest (worst) exit code
            if [ ${cmd_exit} -gt ${exit_code} ]; then
                exit_code=${cmd_exit}
            fi
            found_valid_service=1
        else
            echo_red "service '${service}' does not exist, skipping"
        fi
    done

    # If no valid services were found, return success to prevent build failure
    if [ ${found_valid_service} -eq 0 ]; then
        return 0
    fi

    return ${exit_code}
}

systemctl_if_exists_2 disable armbian-firstrun-config.service
## END

## Step 4: Copy original script to /usr/local/bin/network-configurator
if [[ -f "${ARMBIAN_NET_FIRSTRUN_SCRIPT}" ]]; then
    sudo cp -p "${ARMBIAN_NET_FIRSTRUN_SCRIPT}" "${ARMBIAN_NET_NC_PATH}"
fi
## END

## Step 5: patch /usr/local/bin/network-configurator
if [[ -f "${ARMBIAN_NET_NC_PATH}" ]]; then
    ### Substep 1: replace any amrbian_first_run.txt with network_config.txt
    sed -i 's|armbian_first_run.txt|network_config.txt|g' "${ARMBIAN_NET_NC_PATH}"
    ### Substep 2: replace any FR* Variable name with NC*
    sed -i 's|FR|NC|g' "${ARMBIAN_NET_NC_PATH}"
    ### Supstep 3: Rename function
    sed -i 's|do_firstrun_automated_user_configuration|do_network_configuration|g' "${ARMBIAN_NET_NC_PATH}"
    ### Substep 4: Add a patch note
    sed -i '8 i \\n\# This is a patched version of armbian-firstrun-config for MainsailOS' "${ARMBIAN_NET_NC_PATH}"
    sed -i '10 i # Original located at /usr/lib/armbian/armbian-firstrun-config' "${ARMBIAN_NET_NC_PATH}"
    sed -i '11 i # Changes made by https:\/\/github.com/mainsail-crew' "${ARMBIAN_NET_NC_PATH}"
fi
## END

## Step 6: Enable systemd service
systemctl_if_exists enable network-configurator.service
## END
