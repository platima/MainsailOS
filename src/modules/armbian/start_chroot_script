#!/usr/bin/env bash
#### MainsailOS Specific Tweaks for armbian images
####
#### Written by Stephan Wendel aka KwadFan <me@stephanwe.de>
#### Copyright 2023 - till today
#### https://github.com/mainsail-crew/MainsailOS
####
#### This File is distributed under GPLv3
####

# shellcheck enable=require-variable-braces
# Source error handling, leave this in place
set -Ee

# Source CustomPIOS common.sh
# shellcheck disable=SC1091
source /common.sh
install_cleanup_trap

### Helper func
is_board_type() {
    local board releasefile
    board=""
    releasefile="/etc/armbian-release"
    if [[ -f "${releasefile}" ]]; then
        board="$(grep "BOARD=" "${releasefile}" | cut -d'=' -f2)"
    fi
    echo "${board}"
}

# Base User groups
# Shameless "stolen" from
# https://github.com/guysoft/CustomPiOS/blob/devel/src/variants/armbian/pre_chroot_script

if_group_exists_run() {
    group=$1
    if grep -q "${group}" /etc/group; then
        "${@:2}"
    fi
}

# passwordless sudo during install
# Will be removed in cleanup
echo "${BASE_USER} ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers

echo_green "ls /tmp"
ls /tmp
exit 1

## Step 1: Install armbian specific packages
apt update
# shellcheck disable=SC2086
check_install_pkgs ${ARMBIAN_DEPS}
## END Step 1


## Step 2: Manage groups
### Substep 1: Create group for gpio usage
sudo groupadd gpio
### END Substep 1

### Substep 2: Set default groups
if_group_exists_run i2c usermod -aG i2c "${BASE_USER}"
usermod -aG video,audio,plugdev,games,netdev,sudo,systemd-journal,gpio "${BASE_USER}"
### END Substep 2
## END Step 2

## Step 3: patch sshd_config
sed -i 's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
sed -i 's/^X11Forwarding/#X11Forwarding/' /etc/ssh/sshd_config
sed -i 's/^#MaxAuthTries 6/MaxAuthTries 3/' /etc/ssh/sshd_config
## END Step 3

## Step 4: Try patching first login in build stage
if [[ -f "/root/.not_logged_in_yet" ]]; then
    rm -f /root/.not_logged_in_yet
fi
## END Step 4

## Step 5: Patch dynamic motd
echo_green "Patch dynamic motd ..."
unpack /filesystem/root /
chmod +x /etc/update-motd.d/*
if [[ -f "/etc/default/armbian-motd" ]]; then
    sed -i 's/MOTD_DISABLE=""/MOTD_DISABLE="header"/' /etc/default/armbian-motd
fi
## END Step 5

## Step 6: Enable SPI interface by default
echo_green "Enable SPI interface on Orange Pi SBC's ..."

### Substep 1: Copy default config to backup file
cp "${ARMBIAN_CONFIG_TXT_FILE}" "${ARMBIAN_CONFIG_BAK_FILE}"
### END Substep 1

### Substep 2: Enable SPI in armbianEnv.txt depending on device
#### OrangePi 3 LTS
if [[ "$(is_board_type)" == "orangepi3-lts" ]]; then
    echo "overlays=spi-spidev1" >> "${ARMBIAN_CONFIG_TXT_FILE}"
fi

#### OrangePi 4 LTS
if [[ "$(is_board_type)" == "orangepi4-lts" ]]; then
    echo "overlays=spi-spidev" >> "${ARMBIAN_CONFIG_TXT_FILE}"
    echo "param_spidev_spi_bus=1" >> "${ARMBIAN_CONFIG_TXT_FILE}"
fi
### END Substep 2:

### Substep 3: add spi-dev module to /etc/modules
echo "spi-dev" >> "${ARMBIAN_MODULES_FILE}"
### END Substep 3

echo_green "Enable SPI interface on Orange Pi SBC's ... DONE!"
## END Step 6

## Step 7: Remove unattended-upgrades
echo_green "Remove 'unattended-upgrades' service ..."
sudo apt-get remove --purge --yes unattended-upgrades
## END Step 7

## Step 8: Disable OTG serial console on "bananapim2zero"
if [[ "$(is_board_type)" == "bananapim2zero" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_OTG_SERIAL}" == "true" ]]; then
    echo_green "Disable OTG Serial console for 'bananapim2zero' SBC's ..."
    if [[ ! -d /etc/modprobe.d ]]; then
        mkdir -p /etc/modprobe.d
    fi
    if [[ -d /etc/modprobe.d ]]; then
        echo "blacklist serial_g" >> /etc/modprobe.d/blacklist.conf
    fi
    echo_green "Disable OTG Serial console for 'bananapim2zero' SBC's ... [DONE]"
fi
## END Step 8

## Step 9: Enable spi and/or UART3 on BananaPi M2 Zero
### Enable both
if [[ "$(is_board_type)" == "bananapim2zero" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_ENABLE_UART3}" == "true" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_ENABLE_SPI}" == "true" ]]; then
    echo_green "Enable UART3 and SPI for 'bananapim2zero' SBC ..."
    echo "overlays=uart3 spi-spidev" >> "${ARMBIAN_CONFIG_TXT_FILE}"
fi
### UART3 only
if [[ "$(is_board_type)" == "bananapim2zero" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_ENABLE_UART3}" == "true" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_ENABLE_SPI}" != "true" ]]; then
    echo_green "Enable UART3 for 'bananapim2zero' SBC ..."
    echo "overlays=uart3" >> "${ARMBIAN_CONFIG_TXT_FILE}"
fi
### SPI only
if [[ "$(is_board_type)" == "bananapim2zero" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_ENABLE_UART3}" == "true" ]] \
&& [[ "${ARMBIAN_CONFIG_BPI2ZERO_ENABLE_SPI}" != "true" ]]; then
    echo_green "Enable SPI for 'bananapim2zero' SBC ..."
    echo "overlays=uart3" >> "${ARMBIAN_CONFIG_TXT_FILE}"
fi
## END Step 9


## Step 10: Swap device tree for 5B and enable Wi-Fi
## This is because there is no Armbian image for the 5B, but the 5 image has the DTBs required
## Swapping out the release definition at the same time too
if [[ "${ARMBIAN_CONFIG_ORANGEPI_5B_PATCH}" == "true" ]]; then
	# Update release file
	if [[ -f /etc/armbian-release ]]; then
		sed -i 's/BOARD=orangepi5/BOARD=orangepi5b/g' /etc/armbian-release
		sed -i 's/BOARD_NAME=\"Orange Pi 5\"/BOARD_NAME=\"Orange Pi 5B\"/g' /etc/armbian-release
	fi

	# Check for Orange Pi 5B and modify the DTB file path
	if [[ -f /boot/armbianEnv.txt ]]; then
	    echo_green Patching armbianEnv.txt for 5B

	    # Replace the Orange Pi 5 DTB with Orange Pi 5B DTB
	    sed -i 's|fdtfile=rockchip/rk3588s-orangepi-5.dtb|fdtfile=rockchip/rk3588s-orangepi-5b.dtb|g' /boot/armbianEnv.txt
	fi
fi

## END Step 10
