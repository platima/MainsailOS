#!/usr/bin/env bash

#### Sonar - A WiFi Keepalive daemon
####
#### Written by Stephan Wendel aka KwadFan <me@stephanwe.de>
#### Copyright 2022
#### https://github.com/mainsail-crew/sonar
####
#### This File is distributed under GPLv3
####

# shellcheck enable=requires-variable-braces

# Error handling
set -Ee

# shellcheck disable=SC1091
source /common.sh
install_cleanup_trap

# Module only Variables
SR_BUILD_INSTALL_SH="/home/${BASE_USER}/sonar/tools/install.sh"
SR_BUILD_PACKAGE_FILE="/tmp/sr_packages.lst"

echo_green "Installing sonar ..."

## Force apt update
apt-get update
## Make sure 'git' is installed!
check_install_pkgs git

## Step 1: Move to Home Dir as WorkingDirectoy
pushd "/home/${BASE_USER}" &> /dev/null || exit 1

## Step 2: clone sonar repo
echo_green "Clone sonar repository ..."
gitclone SONAR_REPO sonar

## Step 3: grep PKGLIST from install.sh for dependencies
echo_green "Generating packages file ..."
awk '/local pkglist=\(.*\)/ { gsub(/local pkglist=\(|\)/, ""); print "SONAR_DEPS=\"" $0 "\"" }' "${SR_BUILD_INSTALL_SH}" >> "${SR_BUILD_PACKAGE_FILE}"

## Step 4 is now handled by the awk command above (2025-06-01 Platima)

## Step 5: Source SR_package.lst file
# shellcheck disable=SC1090
. "${SR_BUILD_PACKAGE_FILE}"

## Step 6: Install packages
echo_green "Install sonar dependencies ..."
# shellcheck disable=SC2086
check_install_pkgs ${SONAR_DEPS}

## Step 5: Source SR_package.lst file
# shellcheck disable=SC1090
# Shellcheck has to be disabled here,
# because it is an dynamic generated file and not checkable
. "${SR_BUILD_PACKAGE_FILE}"

## Step 6: Install packages
echo_green "Install sonar dependencies ..."
# shellcheck disable=SC2086
# disabled because we need 'wordsplitting'
check_install_pkgs ${SONAR_DEPS}

## Step 7: Move to sonar as working directory
pushd "/home/${BASE_USER}/sonar" &> /dev/null || exit 1

## Step 7.5 Create config file
echo_green "Create Sonar install config"
{
  echo "BASE_USER=\"${BASE_USER}\""
  echo "SONAR_DATA_PATH=\"/home/${BASE_USER}/printer_data\""
  echo "SONAR_ADD_SONAR_MOONRAKER=\"1\""
  echo "SONAR_UNATTENDED=\"1\""
} > ./tools/.config
echo_red DEBUG START
pwd
cat ./tools/.config
echo IMPORTING
    ## Source config if present
    if [[ -s tools/.config ]]; then
        # shellcheck disable=SC1091
        . tools/.config
	echo IMPORTED
    fi
    if [[ -n "${SONAR_DATA_PATH}" ]]; then
	echo "GOT DATA PATH: ${SONAR_DATA_PATH}"
        SONAR_CONFIG_PATH="${SONAR_DATA_PATH}/config"
        SONAR_LOG_PATH="${SONAR_DATA_PATH}/logs"
        SONAR_SYSTEMD_PATH="${SONAR_DATA_PATH}/systemd"
else
	echo NO DATA PATH
    fi
echo_red DEBUG END

## Step 8: Run sonar install routine
echo_green "Launch sonar install routine ..."
make install

## Step 9: Leave sonar
popd &> /dev/null || exit 1

## Step 10: clean packages.lst file
rm -f "${SR_BUILD_PACKAGE_FILE}"

## Step 11: leave home dir
popd &> /dev/null || exit 1

## Step 12:
echo_green "Enable sonar.service ..."
systemctl_if_exists enable sonar.service

## Finish
echo_green "Installing sonar ... DONE!"
